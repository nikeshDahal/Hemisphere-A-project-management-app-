# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Admin {
  email: String!
  password: String!
  refreshToken: String!
  userName: String!
}

type AdminLoginResponse {
  accessToken: String!
  admin: AdminResponse!
  refreshToken: String!
}

type AdminResponse {
  _id: ID!
  email: String!
  userName: String!
}

type ApplicationUserOutput {
  _id: ID!
  companyName: String!
  email: String!
  name: String!
  phone: Float!
  refreshToken: String!
  userType: UserType!
  username: String!
}

input CreateAdminInput {
  email: String!
  password: String!
  userName: String!
}

input CreateProjectInput {
  description: String!
  endDate: DateTime!
  projectName: String!
  startDate: DateTime!
  users: [ID!]!
}

input CreateUserInput {
  companyName: String!
  email: String!
  name: String!
  password: String!
  phone: Float!
  userType: UserType!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input ForgetPasswordInput {
  email: String!
}

type ForgetPasswordResponse {
  mailSend: Boolean!
  token: String!
}

type Mutation {
  createAdmin(createAdminInput: CreateAdminInput!): AdminResponse!
  createProject(createProjectInput: CreateProjectInput!): ProjectResponse!
  create_application_user(createUserInput: CreateUserInput!): ApplicationUserOutput!
  removeAdmin: AdminResponse!
  removeProject(id: String!): ProjectResponse!
  removeUser(id: String!): User!
  updateAdmin(updateAdminInput: UpdateAdminInput!): AdminResponse!
  updateProject(updateProjectInput: UpdateProjectInput!): ProjectResponse!
  updateUser(updateUserInput: UpdateUserInput!): ApplicationUserOutput!
}

type ProjectResponse {
  _id: ID!
  createdBy: AdminResponse!
  description: String!
  endDate: DateTime!
  projectName: String!
  startDate: DateTime!
  totalAssignedUser: Float
  users: [ApplicationUserOutput!]!
}

type Query {
  AdminProfile: AdminResponse!
  ForgetPassword(ForgetPasswordInput: ForgetPasswordInput!): ForgetPasswordResponse!
  LoginUser(loginData: UserLoginInput!): UserLoginOutput!
  ResetPassword(resetpasswordInput: ResetPasswordInput!): ResetPasswordOutput!
  getThisProject(id: String!): ProjectResponse!
  listApplicationusers: [ApplicationUserOutput!]!
  list_projects: [ProjectResponse!]!
  loginAdmin(loginDatas: loginInput!): AdminLoginResponse!
  userProfile: ApplicationUserOutput!
  validateRefreshToken(refreshToken: String!): AdminLoginResponse!
  validateRefreshTokenOfUser(refreshToken: String!): UserLoginOutput!
}

input ResetPasswordInput {
  confirmPassword: String!
  newPassword: String!
}

type ResetPasswordOutput {
  resetPassword: Boolean!
}

input UpdateAdminInput {
  email: String
  password: String
  userName: String
}

input UpdateProjectInput {
  _id: String!
  description: String
  endDate: DateTime
  projectName: String
  startDate: DateTime
  users: [ID!]
}

input UpdateUserInput {
  _id: ID!
  companyName: String
  email: String
  name: String
  password: String
  phone: Float
  userType: UserType
  username: String
}

type User {
  companyName: String!
  email: String!
  name: String!
  password: String!
  phone: Float!
  refreshToken: String!
  userType: String!
  username: String!
}

input UserLoginInput {
  email: String!
  password: String!
}

type UserLoginOutput {
  accessToken: String!
  refreshToken: String!
  user: ApplicationUserOutput!
}

enum UserType {
  CLIENT
  NORMAL_STAFF
  PROJECT_MANAGER
  TRADIES
}

input loginInput {
  email: String!
  password: String!
}
